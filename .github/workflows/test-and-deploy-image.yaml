---
name: Test and deploy image

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:

permissions:
  contents: read
  pull-requests: write
  security-events: write
  packages: write

jobs:
  build-image:
    name: Build image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to ghcr.io registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and export to Docker for CVEs check
        uses: docker/build-push-action@v6
        with:
          push: false
          load: true # Export to Docker Engine rather than pushing to registry
          tags: ${{ github.run_id }}
          target: test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy for HIGH and CRITICAL CVEs
        uses: aquasecurity/trivy-action@0.32.0
        with:
          image-ref: ${{ github.run_id }}
          format: sarif
          exit-code: 1
          vuln-type: os,library
          severity: CRITICAL
          output: trivy-results.sarif
          scanners: vuln
          # CRITICAL: This flag is REQUIRED to make the exit code respect the 'severity' setting.
          # Without it, the step fails on ANY vulnerability when using SARIF format due to a known
          # issue in the action (aquasecurity/trivy-action#386). Do not remove.
          limit-severities-for-sarif: true

      - name: Upload Trivy scan results to Github Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: trivy-results.sarif

      - name: Build and push to ghcr for smoke test
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/sundalei/${{ github.run_id }}:integration-test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Integration Tests
        run: |
          export TESTING_IMAGE=ghcr.io/sundalei/${{ github.run_id }}:integration-test
          export LDAP_ADMIN_PASSWORD=${{ secrets.LDAP_ADMIN_PASSWORD }}
          docker compose -f compose.yaml up --abort-on-container-exit --exit-code-from integration-tester

      - name: Create k3d cluster
        uses: AbsaOSS/k3d-action@v2
        with:
          cluster-name: "test-cluster-1"
          args: >-
            --agents 1
            --no-lb
            --k3s-arg "--no-deploy=traefik,servicelb,metrics-server@server:*"

      - name: Smoke test deployment in k3d Kubernetes
        run: |

          kubectl create secret generic ldap-secret --from-literal=password=${{ secrets.LDAP_ADMIN_PASSWORD }}

          kubectl create secret docker-registry dockerhub-cred \
            --docker-server=https://index.docker.io/v1/ \
            --docker-username=${{ secrets.DOCKERHUB_USERNAME }} \
            --docker-password=${{ secrets.DOCKERHUB_TOKEN }}

          kubectl apply -f manifests/ldap-deployment.yaml

          echo "Pausing for 25 seconds to allow pods to start..."
          sleep 25

          kubectl rollout status deployment openldap-server

          kubectl create secret docker-registry regcred \
            --docker-server=https://ghcr.io \
            --docker-username=${{ github.actor }} \
            --docker-password=${{ secrets.GITHUB_TOKEN }}

          export TESTING_IMAGE=ghcr.io/sundalei/${{ github.run_id }}:integration-test
          envsubst < manifests/deployment.yaml  | kubectl apply -f -

          echo "Pausing for 25 seconds to allow pods to start..."
          sleep 25

          kubectl rollout status deployment user-manage-ldap
          kubectl run curl-tester --image=curlimages/curl:8.9.0 -i --rm --restart=Never -- curl --fail http://user-manage-ldap:8080/users

      - name: Docker metadata for final image build
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: sundalei/user-manage-ldap
          flavor: |
            latest=false
          tags: |
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=ref,event=pr
            type=semver,pattern={{version}}

      - name: Docker build and push to Docker Hub
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Find comment for image tags
        uses: peter-evans/find-comment@v3
        if: github.event_name == 'pull_request'
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: "Docker image tag(s) pushed"

      - name: Create or update comment for image tags
        uses: peter-evans/create-or-update-comment@v4
        if: github.event_name == 'pull_request'
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Docker image tag(s) pushed:
            ```text
            ${{ steps.docker_meta.outputs.tags }}
            ```

            Labels added to images:
            ```text
            ${{ steps.docker_meta.outputs.labels }}
            ```
          edit-mode: replace
